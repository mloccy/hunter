# Copyright (c) 2013, 2015 Ruslan Baratov, Alexandre Pretyman
# All rights reserved.

cmake_minimum_required(VERSION 3.10)
project(Hunter)

include("@HUNTER_SELF@/cmake/Hunter")

include(hunter_user_error)
include(hunter_status_debug)
include(hunter_assert_not_empty_string)
include(ExternalProject) # ExternalProject_Add

hunter_status_debug("Scheme: url_sha1_meson")

# Check preconditions
hunter_assert_not_empty_string("@HUNTER_SELF@")
hunter_assert_not_empty_string("@HUNTER_EP_NAME@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_URL@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SHA1@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_BUILD_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_assert_not_empty_string("@HUNTER_INSTALL_PREFIX@")

hunter_add_package(hunter_venv)
find_package(hunter_venv CONFIG REQUIRED)
hunter_add_package(meson)

foreach(dependency ${DEPENDS_ON_PACKAGES})
  hunter_add_package(${dependency})
endforeach()

set(native_file_path "@HUNTER_PACKAGE_DOWNLOAD_DIR@/meson-native.ini")
configure_file(
    "@HUNTER_SELF@/scripts/meson-native.ini.in"
    "${native_file_path}")

set(additional_setup_args "")

if (MSVC)
    list(APPEND additional_setup_args --backend=vs)
endif()
ExternalProject_Add(
        "@HUNTER_EP_NAME@"
    URL
        "@HUNTER_PACKAGE_URL@"
    URL_HASH
        SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_EXTRACT_TIMESTAMP
        TRUE
    TLS_VERIFY
        "@HUNTER_TLS_VERIFY@"
    DOWNLOAD_DIR
        "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    SOURCE_DIR
        "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
      "@HUNTER_PACKAGE_INSTALL_PREFIX@"
    CONFIGURE_COMMAND
    ${Python3_EXECUTABLE} -m mesonbuild.mesonmain setup --native-file "${native_file_path}" "@HUNTER_PACKAGE_BUILD_DIR@"
    BUILD_COMMAND
    ${Python3_EXECUTABLE} -m mesonbuild.mesonmain compile -C "@HUNTER_PACKAGE_BUILD_DIR@"

    BUILD_IN_SOURCE
        1
    INSTALL_COMMAND
        ""
    )
